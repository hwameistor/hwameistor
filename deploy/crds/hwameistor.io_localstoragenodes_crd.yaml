apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: localstoragenodes.hwameistor.io
spec:
  group: hwameistor.io
  names:
    kind: LocalStorageNode
    listKind: LocalStorageNodeList
    plural: localstoragenodes
    shortNames:
    - lsn
    singular: localstoragenode
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: IPv4 address
      jsonPath: .spec.storageIP
      name: ip
      type: string
    - description: State of the Local Storage Node
      jsonPath: .status.state
      name: status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LocalStorageNode is the Schema for the localstoragenodes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LocalStorageNodeSpec defines the desired state of LocalStorageNode
            properties:
              hostname:
                type: string
              storageIP:
                description: IPv4 address is for HA replication traffic
                type: string
              topogoly:
                description: Topology defines the topology info of Node
                properties:
                  region:
                    default: default
                    description: Region is a collection of Zones
                    type: string
                  zone:
                    default: default
                    description: Zone is a collection of Local Storage Nodes
                    type: string
                type: object
            type: object
          status:
            description: LocalStorageNodeStatus defines the observed state of LocalStorageNode
            properties:
              conditions:
                description: Represents the latest available observations of a localstoragenode's
                  current state.
                items:
                  description: StorageNodeCondition describes the state of a localstoragenode
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of localstoragenode condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              poolExtendRecords:
                additionalProperties:
                  items:
                    description: LocalDiskClaimSpec defines the desired state of LocalDiskClaim
                    properties:
                      description:
                        description: Description of the disk to be claimed
                        properties:
                          capacity:
                            description: Capacity of the disk in bytes
                            format: int64
                            type: integer
                          diskType:
                            description: DiskType represents the type of drive like
                              SSD, HDD etc.,
                            type: string
                        type: object
                      diskRefs:
                        description: DiskRefs represents which disks are assigned
                          to the LocalDiskClaim
                        items:
                          description: 'ObjectReference contains enough information
                            to let you inspect or modify the referred object. ---
                            New uses of this type are discouraged because of difficulty
                            describing its usage when embedded in APIs.  1. Ignored
                            fields.  It includes many fields which are not generally
                            honored.  For instance, ResourceVersion and FieldPath
                            are both very rarely valid in actual usage.  2. Invalid
                            usage help.  It is impossible to add specific help for
                            individual usage.  In most embedded usages, there are
                            particular     restrictions like, "must refer only to
                            types A and B" or "UID not honored" or "name must be restricted".     Those
                            cannot be well described when embedded.  3. Inconsistent
                            validation.  Because the usages are different, the validation
                            rules are different by usage, which makes it hard for
                            users to predict what will happen.  4. The fields are
                            both imprecise and overly precise.  Kind is not a precise
                            mapping to a URL. This can produce ambiguity     during
                            interpretation and require a REST mapping.  In most cases,
                            the dependency is on the group,resource tuple     and
                            the version of the actual struct is irrelevant.  5. We
                            cannot easily change it.  Because this type is embedded
                            in many locations, updates to this type     will affect
                            numerous schemas.  Don''t make new APIs embed an underspecified
                            API type they do not control. Instead of using this type,
                            create a locally provided and used type that is well-focused
                            on your reference. For example, ServiceReferences for
                            admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                            .'
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        type: array
                      nodeName:
                        description: NodeName represents where disk has to be claimed.
                        type: string
                      owner:
                        description: Owner represents which system owns this claim(e.g.
                          local-storage, local-disk-manager)
                        type: string
                    required:
                    - nodeName
                    - owner
                    type: object
                  type: array
                description: PoolExtendRecords record why disks are joined in the
                  pool
                type: object
              pools:
                additionalProperties:
                  description: LocalPool is storage pool struct
                  properties:
                    class:
                      description: 'Supported class: HDD, SSD, NVMe'
                      enum:
                      - HDD
                      - SSD
                      - NVMe
                      type: string
                    disks:
                      items:
                        description: LocalDevice is disk struct
                        properties:
                          capacityBytes:
                            description: disk capacity
                            format: int64
                            type: integer
                          devPath:
                            description: e.g. /dev/sdb
                            type: string
                          state:
                            description: 'Possible state: Available, Inuse, Offline'
                            type: string
                          type:
                            description: 'Supported: HDD, SSD, NVMe, RAM'
                            type: string
                        type: object
                      type: array
                    freeCapacityBytes:
                      format: int64
                      type: integer
                    freeVolumeCount:
                      format: int64
                      type: integer
                    name:
                      description: 'Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL'
                      type: string
                    path:
                      description: VG path
                      type: string
                    totalCapacityBytes:
                      format: int64
                      type: integer
                    totalVolumeCount:
                      format: int64
                      type: integer
                    type:
                      default: REGULAR
                      description: 'Supported type: REGULAR'
                      enum:
                      - REGULAR
                      type: string
                    usedCapacityBytes:
                      format: int64
                      type: integer
                    usedVolumeCount:
                      format: int64
                      type: integer
                    volumeCapacityBytesLimit:
                      format: int64
                      type: integer
                    volumes:
                      items:
                        type: string
                      type: array
                  required:
                  - class
                  - freeCapacityBytes
                  - freeVolumeCount
                  - totalCapacityBytes
                  - totalVolumeCount
                  - type
                  - usedCapacityBytes
                  - usedVolumeCount
                  - volumeCapacityBytesLimit
                  type: object
                description: 'There may have multiple storage pools in a node. e.g.
                  HDD_POOL, SSD_POOL, NVMe_POOL Pools: poolName -> LocalPool'
                type: object
              state:
                description: 'State of the Local Storage Node/Member: New, Active,
                  Inactive, Failed'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
