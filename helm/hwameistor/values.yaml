# global config
global:
  # k8sImageRegistry is used to control which image registry the CSIController
  # images, i.e. provisioner,attacher,registrar,resizer is pulled from
  # Users in China can change to these sites for option
  # k8sImageRegistry: m.daocloud.io/registry.k8s.io
  k8sImageRegistry: registry.k8s.io
  # hwameistorImageRegistry is used to control which image registry the hwameistor
  # images, i.e. localDiskManager,localstorage,scheduler,admission,evictor is pulled from
  # Users in China can change to these sites for option
  # hwameistorImageRegistry: ghcr.m.daocloud.io
  hwameistorImageRegistry: ghcr.io
  # kubeletRootDir is used to inform Hwameistor Kubelet plugin directory
  kubeletRootDir: /var/lib/kubelet

# StorageClass Settings
storageClass:
  # If enabled, a hwameistor storageclass will be created in your system
  enabled: true
  # If enabled, hwameistor storageclass will be a default storageclass in system
  # Attention: ensure your system doesn't have any default storageclass before
  # more info: https://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/
  default: false
  # If allowed, volume can be expanded by modify pvc related field
  allowVolumeExpansion: true
  convertible: false
  reclaimPolicy: Delete
  # If enabled, you need install drbd kernel module on each node first
  enableHA: false
  # Represent which kind disk will be used to provision volume
  diskType: HDD
  fsType: xfs

# storageNodes means the nodes will be used for creating local volumes
storageNodes: []

scheduler:
  replicas: 1
  kubeApiServerConfigFilePath: /etc/kubernetes/admin.conf
  imageRepository: hwameistor/scheduler
  tag: ""
  resources: {}

admission:
  replicas: 1
  imageRepository: hwameistor/admission
  tag: ""
  resources: {}
  # failurePolicy defines how unrecognized errors from the admission endpoint
  # are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy: "Ignore"

evictor:
  replicas: 1
  imageRepository: hwameistor/evictor
  tag: ""
  resources: {}

failoverAssistant:
  replicas: 1
  imageRepository: hwameistor/failover-assistant
  tag: ""
  resources: {}
  cooldown-duration: 15

exporter:
  replicas: 1
  imageRepository: hwameistor/exporter
  tag: ""
  resources: {}

apiserver:
  replicas: 1
  imageRepository: hwameistor/apiserver
  tag: ""
  resources: {}
  auth:
    # If user enable authentication, he should set a AccessId and SecretKey
    enableAuth: false
    accessId: admin
    secretKey: admin

ui:
  replicas: 1
  imageRepository: hwameistor/hwameistor-ui
  tag: v0.11.0
  resources: {}

localDiskManager:
  tolerationsOnMaster: true
  enableCSI: true
  registrar:
    imageRepository: sig-storage/csi-node-driver-registrar
    tag: v2.5.0
    resources: {}
  manager:
    imageRepository: hwameistor/local-disk-manager
    tag: ""
    resources: {}

localDiskManagerCSIController:
  replicas: 1
  priorityClassName: 
  provisioner:
    imageRepository: sig-storage/csi-provisioner
    tag: v2.0.3
    resources: {}
  attacher:
    imageRepository: sig-storage/csi-attacher
    tag: v3.0.1
    resources: {}

localStorage:
  tolerationsOnMaster: true
  priorityClassName: 
  registrar:
    imageRepository: sig-storage/csi-node-driver-registrar
    tag: v2.5.0
    resources: {}
  member:
    config:
      # Each HA volume using DRBD will occupy a port for data volume synchronization.
      # hwameistor limits each node to use up to 1000 volumes, so the final port range is [ startPort, startPort + maxHAVolumeCount - 1 ].
      drbdStartPort: 43001
      # Max HA volume count
      maxHAVolumeCount: 1000
    imageRepository: hwameistor/local-storage
    tag: ""
    resources: {}
  migrate:
    rclone:
      # can use daocloud.io/daocloud/hwameistor-migrate-rclone:v1.1.2 which is exactly same as the following
      imageRepository: rclone/rclone
      tag: 1.53.2
  hostPaths:
    sshDir: /root/.ssh
    drbdDir: /etc/drbd.d

localStorageCSIController:
  replicas: 1
  priorityClassName:
  provisioner:
    imageRepository: sig-storage/csi-provisioner
    tag: v2.0.3
    resources: {}
  attacher:
    imageRepository: sig-storage/csi-attacher
    tag: v3.0.1
    resources: {}
  resizer:
    imageRepository: sig-storage/csi-resizer
    tag: v1.0.1
    resources: {}
  healthMonitor:
    imageRepository: sig-storage/csi-external-health-monitor-controller
    tag: v0.8.0
    resources: {}