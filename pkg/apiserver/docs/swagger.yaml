definitions:
  api.AuthInfoRspBody:
    properties:
      enabled:
        type: boolean
    type: object
  api.AuthLogoutRspBody:
    properties:
      success:
        type: boolean
    type: object
  api.AuthReqBody:
    properties:
      accessId:
        type: string
      secretKey:
        type: string
    type: object
  api.AuthRspBody:
    properties:
      expireAt:
        type: integer
      token:
        type: string
    type: object
  api.DiskReqBody:
    properties:
      reserve:
        type: boolean
    type: object
  api.DrbdEnableSetting:
    properties:
      enable:
        type: boolean
      state:
        $ref: '#/definitions/api.State'
      version:
        type: string
    type: object
  api.DrbdEnableSettingReqBody:
    properties:
      enable:
        type: boolean
    type: object
  api.DrbdEnableSettingRspBody:
    properties:
      data:
        $ref: '#/definitions/api.DrbdEnableSetting'
    type: object
  api.Event:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.EventSpec'
      status:
        $ref: '#/definitions/v1alpha1.EventStatus'
    type: object
  api.EventAction:
    properties:
      eventRecord:
        $ref: '#/definitions/v1alpha1.EventRecord'
      resourceName:
        type: string
      resourceType:
        type: string
    type: object
  api.EventActionList:
    properties:
      items:
        items:
          $ref: '#/definitions/api.EventAction'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.LocalDiskInfo:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      availableCapacityBytes:
        description: AvailableCapacityBytes 可用容量
        type: integer
      diskPathShort:
        description: diskPathShort 磁盘路径简写
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      localStoragePooLName:
        description: LocalStoragePooLName 存储池名称
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalDiskSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalDiskStatus'
      totalCapacityBytes:
        description: TotalCapacityBytes 总容量
        type: integer
    type: object
  api.LocalDiskList:
    properties:
      items:
        description: LocalDisks 集群磁盘列表
        items:
          $ref: '#/definitions/v1alpha1.LocalDisk'
        type: array
    type: object
  api.LocalDiskListByNode:
    properties:
      diskPathShort:
        description: diskPathShort 磁盘路径简写
        type: string
      items:
        description: localDisks 节点磁盘列表
        items:
          $ref: '#/definitions/api.LocalDiskInfo'
        type: array
      nodeName:
        description: nodeName 节点名称
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.LocalDiskNodeList:
    properties:
      items:
        description: LocalDiskNodes 集群磁盘组列表
        items:
          $ref: '#/definitions/v1alpha1.LocalDiskNode'
        type: array
    type: object
  api.LocalDisksItemsList:
    properties:
      items:
        description: localDisks 节点磁盘列表
        items:
          $ref: '#/definitions/api.LocalDiskInfo'
        type: array
    type: object
  api.ModuleState:
    properties:
      name:
        description: 组件名称
        type: string
      state:
        allOf:
        - $ref: '#/definitions/api.State'
        description: 组件状态 运行中 未就绪
    type: object
  api.ModuleStatus:
    properties:
      componentStatus:
        $ref: '#/definitions/v1alpha1.ComponentStatus'
      diskReserveState:
        type: string
      drbdAdapterCreated:
        type: boolean
      drbdAdapterCreatedJobNum:
        type: integer
      installedCRDS:
        type: boolean
      modulesStatus:
        items:
          $ref: '#/definitions/api.ModuleState'
        type: array
      phase:
        type: string
    type: object
  api.NodeDiskListByPool:
    properties:
      items:
        description: localDisks 节点磁盘列表
        items:
          $ref: '#/definitions/api.LocalDiskInfo'
        type: array
      nodeName:
        description: nodeName 节点名称
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
      poolName:
        description: PoolName 存储池名称
        type: string
    type: object
  api.NodeUpdateReqBody:
    properties:
      enable:
        type: boolean
    type: object
  api.NodeUpdateRspBody:
    properties:
      success:
        type: boolean
    type: object
  api.Operation:
    properties:
      description:
        description: 详细描述
        type: string
      endTime:
        description: 结束时间
        type: string
      eventName:
        description: 事件名称
        type: string
      eventType:
        description: 事件类型
        type: string
      localVolumeName:
        description: 操作对象
        type: string
      startTime:
        description: 开始时间
        type: string
      status:
        allOf:
        - $ref: '#/definitions/api.State'
        description: 状态
    type: object
  api.OperationMetric:
    properties:
      items:
        items:
          $ref: '#/definitions/api.Operation'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.Pagination:
    properties:
      page:
        description: 当前页索引，从 1 开始，为 0 时，会自动重置为默认值 constants.DefaultPage
        type: integer
      pageSize:
        description: |-
          每页数据量，为 -1 时表示查询全部，为 0 时会重置为默认值
          constants.DefaultPageSize
        type: integer
      pages:
        description: 总页数
        type: integer
      total:
        description: 总共有多少条目，请求时可以不用传递
        type: integer
    type: object
  api.RspFailBody:
    properties:
      description:
        type: string
      errcode:
        type: integer
    type: object
  api.Snapshot:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeSnapshotSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeSnapshotStatus'
    type: object
  api.SnapshotList:
    properties:
      items:
        items:
          $ref: '#/definitions/api.Snapshot'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.State:
    enum:
    - Submitted
    - AddReplica
    - SyncReplica
    - PruneReplica
    - InProgress
    - Completed
    - ToBeAborted
    - Cancelled
    - Aborted
    - Failed
    - ToBeMounted
    - ""
    - Created
    - Creating
    - Ready
    - NotReady
    - ToBeDeleted
    - Deleted
    - Unknown
    - Invalid
    - Creating
    - Ready
    - NotReady
    - ToBeDeleted
    - Deleted
    - Ready
    - Maintain
    - Offline
    - ""
    - Unknown
    - ReadyAndNotReady
    - Healthy
    - NotReady
    - ""
    - Ready
    - Maintain
    - Offline
    - Unknown
    - Unclaimed
    - Released
    - Claimed
    - Inuse
    - Reserved
    - ReleaseReserved
    - ""
    - ClaimedAndUnclaimed
    - Pending
    - Bound
    - Available
    - Active
    - Inactive
    - Unknown
    - Running
    - NotReady
    - Enabled
    - Disabled
    - Succeed
    - Failed
    type: string
    x-enum-varnames:
    - OperationStateSubmitted
    - OperationStateMigrateAddReplica
    - OperationStateMigrateSyncReplica
    - OperationStateMigratePruneReplica
    - OperationStateInProgress
    - OperationStateCompleted
    - OperationStateToBeAborted
    - OperationStateAborting
    - OperationStateAborted
    - OperationStateFailed
    - VolumeStateToBeUnmount
    - VolumeStateEmpty
    - VolumeStateCreated
    - VolumeStateCreating
    - VolumeStateReady
    - VolumeStateNotReady
    - VolumeStateToBeDeleted
    - VolumeStateDeleted
    - VolumeStateUnknown
    - VolumeReplicaStateInvalid
    - VolumeReplicaStateCreating
    - VolumeReplicaStateReady
    - VolumeReplicaStateNotReady
    - VolumeReplicaStateToBeDeleted
    - VolumeReplicaStateDeleted
    - NodeStateReady
    - NodeStateMaintain
    - NodeStateOffline
    - NodeStateEmpty
    - NodeStateUnknown
    - NodeStateReadyAndNotReady
    - NodeStateHealthy
    - NodeStateNotReady
    - DriverStateEmpty
    - DriverStateReady
    - DriverStateMaintain
    - DriverStateOffline
    - DriverStateUnknown
    - LocalDiskUnclaimed
    - LocalDiskReleased
    - LocalDiskClaimed
    - LocalDiskInUse
    - LocalDiskReserved
    - LocalDiskReleaseReserved
    - LocalDiskEmpty
    - LocalDiskClaimedAndUnclaimed
    - LocalDiskPending
    - LocalDiskBound
    - LocalDiskAvailable
    - LocalDiskActive
    - LocalDiskInactive
    - LocalDiskUnknown
    - ModuleStatusRunning
    - ModuleStatusNotReady
    - DrbdModuleStatusEnabled
    - DrbdModuleStatusDisabled
    - ReservedSucceedState
    - ReservedFailedState
  api.StorageNode:
    properties:
      K8sNode:
        $ref: '#/definitions/v1.Node'
      k8SNodeState:
        $ref: '#/definitions/api.State'
      localDiskNode:
        $ref: '#/definitions/v1alpha1.LocalDiskNode'
      localStorageNode:
        $ref: '#/definitions/v1alpha1.LocalStorageNode'
    type: object
  api.StorageNodeList:
    properties:
      items:
        description: StorageNodes
        items:
          $ref: '#/definitions/api.StorageNode'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.StorageNodeListByPool:
    properties:
      items:
        description: StorageNodes
        items:
          $ref: '#/definitions/api.StorageNode'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
      storagePoolName:
        description: StoragePoolName 存储池名称
        type: string
    type: object
  api.StorageNodePool:
    properties:
      class:
        description: |-
          Supported class: HDD, SSD, NVMe
          +kubebuilder:validation:Enum:=HDD;SSD;NVMe
        type: string
      disks:
        items:
          $ref: '#/definitions/v1alpha1.LocalDevice'
        type: array
      freeCapacityBytes:
        type: integer
      freeVolumeCount:
        type: integer
      name:
        description: 'Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL'
        type: string
      nodeName:
        description: NodesName Pool所在节点
        type: string
      path:
        description: VG path
        type: string
      totalCapacityBytes:
        type: integer
      totalVolumeCount:
        type: integer
      type:
        description: |-
          Supported type: REGULAR
          +kubebuilder:validation:Enum:=REGULAR
          +kubebuilder:default:=REGULAR
        type: string
      usedCapacityBytes:
        type: integer
      usedVolumeCount:
        type: integer
      volumeCapacityBytesLimit:
        type: integer
      volumes:
        items:
          type: string
        type: array
    type: object
  api.StoragePool:
    properties:
      allocatedCapacityBytes:
        description: AllocatedCapacityBytes 存储池已经分配存储容量
        type: integer
      createTime:
        description: createTime 创建时间
        type: string
      items:
        items:
          $ref: '#/definitions/api.StorageNodePool'
        type: array
      nodeNames:
        description: NodesNames Pool所在节点列表
        items:
          type: string
        type: array
      poolName:
        description: 'Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL 存储池名称'
        type: string
      totalCapacityBytes:
        description: TotalCapacityBytes 存储池对应存储总容量
        type: integer
    type: object
  api.StoragePoolExpansionReqBody:
    properties:
      diskType:
        description: HDD/SSD/NVME
        type: string
      nodeName:
        type: string
      owner:
        description: local-storage/local-disk-manager
        type: string
    type: object
  api.StoragePoolExpansionRspBody:
    properties:
      success:
        type: boolean
    type: object
  api.StoragePoolList:
    properties:
      items:
        description: storagePools
        items:
          $ref: '#/definitions/api.StoragePool'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.Volume:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeStatus'
    type: object
  api.VolumeConvertInfo:
    properties:
      replicaNum:
        type: integer
      volumeName:
        type: string
    type: object
  api.VolumeConvertOperation:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeConvertSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeConvertStatus'
    type: object
  api.VolumeConvertReqBody:
    properties:
      abort:
        type: boolean
    type: object
  api.VolumeConvertRspBody:
    properties:
      data:
        $ref: '#/definitions/api.VolumeConvertInfo'
    type: object
  api.VolumeExpandInfo:
    properties:
      targetCapacityBytes:
        type: integer
      volumeName:
        type: string
    type: object
  api.VolumeExpandOperation:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeExpandSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeExpandStatus'
    type: object
  api.VolumeExpandReqBody:
    properties:
      abort:
        type: boolean
      targetCapacity:
        description: VolumeName     string `json:"volumeName,omitempty"`
        type: string
    type: object
  api.VolumeExpandRspBody:
    properties:
      data:
        $ref: '#/definitions/api.VolumeExpandInfo'
    type: object
  api.VolumeGroup:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      items:
        description: Volumes
        items:
          $ref: '#/definitions/v1alpha1.LocalVolume'
        type: array
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeGroupSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeGroupStatus'
    type: object
  api.VolumeGroupList:
    properties:
      items:
        description: VolumeGroups
        items:
          $ref: '#/definitions/api.VolumeGroup'
        type: array
    type: object
  api.VolumeList:
    properties:
      items:
        items:
          $ref: '#/definitions/api.Volume'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.VolumeMigrateInfo:
    properties:
      selectedNode:
        type: string
      srcNode:
        type: string
      volumeName:
        type: string
    type: object
  api.VolumeMigrateOperation:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeMigrateSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeMigrateStatus'
    type: object
  api.VolumeMigrateReqBody:
    properties:
      abort:
        type: boolean
      selectedNode:
        type: string
      srcNode:
        type: string
    type: object
  api.VolumeMigrateRspBody:
    properties:
      data:
        $ref: '#/definitions/api.VolumeMigrateInfo'
    type: object
  api.VolumeOperationByVolume:
    properties:
      VolumeConvertOperations:
        description: VolumeConvertOperations
        items:
          $ref: '#/definitions/api.VolumeConvertOperation'
        type: array
      VolumeExpandOperations:
        description: VolumeExpandOperations
        items:
          $ref: '#/definitions/api.VolumeExpandOperation'
        type: array
      volumeMigrateOperations:
        description: |-
          // OperationList
          OperationList []Operation `json:"items"`
          VolumeMigrateOperations
        items:
          $ref: '#/definitions/api.VolumeMigrateOperation'
        type: array
      volumeName:
        description: VolumeName
        type: string
    type: object
  api.VolumeOperationListByNode:
    properties:
      items:
        description: VolumeOperations
        items:
          $ref: '#/definitions/api.VolumeMigrateOperation'
        type: array
      nodeName:
        description: node name
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/api.Pagination'
        description: page 信息
    type: object
  api.VolumeReplica:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeReplicaSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeReplicaStatus'
    type: object
  api.VolumeReplicaList:
    properties:
      volumeName:
        description: volume name
        type: string
      volumeReplicas:
        description: VolumeReplicas
        items:
          $ref: '#/definitions/api.VolumeReplica'
        type: array
    type: object
  github_com_hwameistor_hwameistor_pkg_apis_hwameistor_v1alpha1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  k8s_io_api_core_v1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  resource.Quantity:
    properties:
      Format:
        type: string
    type: object
  v1.AttachedVolume:
    properties:
      devicePath:
        description: DevicePath represents the device path where the volume should
          be available
        type: string
      name:
        description: Name of the attached volume
        type: string
    type: object
  v1.ConfigMapNodeConfigSource:
    properties:
      kubeletConfigKey:
        description: |-
          KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure
          This field is required in all cases.
        type: string
      name:
        description: |-
          Name is the metadata.name of the referenced ConfigMap.
          This field is required in all cases.
        type: string
      namespace:
        description: |-
          Namespace is the metadata.namespace of the referenced ConfigMap.
          This field is required in all cases.
        type: string
      resourceVersion:
        description: |-
          ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap.
          This field is forbidden in Node.Spec, and required in Node.Status.
          +optional
        type: string
      uid:
        description: |-
          UID is the metadata.UID of the referenced ConfigMap.
          This field is forbidden in Node.Spec, and required in Node.Status.
          +optional
        type: string
    type: object
  v1.ContainerImage:
    properties:
      names:
        description: |-
          Names by which this image is known.
          e.g. ["k8s.gcr.io/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"]
          +optional
        items:
          type: string
        type: array
      sizeBytes:
        description: |-
          The size of the image in bytes.
          +optional
        type: integer
    type: object
  v1.DaemonEndpoint:
    properties:
      Port:
        description: Port number of the given endpoint.
        type: integer
    type: object
  v1.FieldsV1:
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        allOf:
        - $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        allOf:
        - $ref: '#/definitions/v1.ManagedFieldsOperationType'
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is the timestamp of when the ManagedFields entry was added. The
          timestamp will also be updated if a field is added, the manager
          changes any of the owned fields value or removes a field. The
          timestamp does not update when a field is removed from the entry
          because another manager took it over.
          +optional
        type: string
    type: object
  v1.ManagedFieldsOperationType:
    enum:
    - Apply
    - Update
    type: string
    x-enum-varnames:
    - ManagedFieldsOperationApply
    - ManagedFieldsOperationUpdate
  v1.Node:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.NodeSpec'
        description: |-
          Spec defines the behavior of a node.
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
      status:
        allOf:
        - $ref: '#/definitions/v1.NodeStatus'
        description: |-
          Most recently observed status of the node.
          Populated by the system.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
    type: object
  v1.NodeAddress:
    properties:
      address:
        description: The node address.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/v1.NodeAddressType'
        description: Node address type, one of Hostname, ExternalIP or InternalIP.
    type: object
  v1.NodeAddressType:
    enum:
    - Hostname
    - InternalIP
    - ExternalIP
    - InternalDNS
    - ExternalDNS
    type: string
    x-enum-varnames:
    - NodeHostName
    - NodeInternalIP
    - NodeExternalIP
    - NodeInternalDNS
    - NodeExternalDNS
  v1.NodeCondition:
    properties:
      lastHeartbeatTime:
        description: |-
          Last time we got an update on a given condition.
          +optional
        type: string
      lastTransitionTime:
        description: |-
          Last time the condition transit from one status to another.
          +optional
        type: string
      message:
        description: |-
          Human readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          (brief) reason for the condition's last transition.
          +optional
        type: string
      status:
        allOf:
        - $ref: '#/definitions/k8s_io_api_core_v1.ConditionStatus'
        description: Status of the condition, one of True, False, Unknown.
      type:
        allOf:
        - $ref: '#/definitions/v1.NodeConditionType'
        description: Type of node condition.
    type: object
  v1.NodeConditionType:
    enum:
    - Ready
    - MemoryPressure
    - DiskPressure
    - PIDPressure
    - NetworkUnavailable
    type: string
    x-enum-varnames:
    - NodeReady
    - NodeMemoryPressure
    - NodeDiskPressure
    - NodePIDPressure
    - NodeNetworkUnavailable
  v1.NodeConfigSource:
    properties:
      configMap:
        allOf:
        - $ref: '#/definitions/v1.ConfigMapNodeConfigSource'
        description: ConfigMap is a reference to a Node's ConfigMap
    type: object
  v1.NodeConfigStatus:
    properties:
      active:
        allOf:
        - $ref: '#/definitions/v1.NodeConfigSource'
        description: |-
          Active reports the checkpointed config the node is actively using.
          Active will represent either the current version of the Assigned config,
          or the current LastKnownGood config, depending on whether attempting to use the
          Assigned config results in an error.
          +optional
      assigned:
        allOf:
        - $ref: '#/definitions/v1.NodeConfigSource'
        description: |-
          Assigned reports the checkpointed config the node will try to use.
          When Node.Spec.ConfigSource is updated, the node checkpoints the associated
          config payload to local disk, along with a record indicating intended
          config. The node refers to this record to choose its config checkpoint, and
          reports this record in Assigned. Assigned only updates in the status after
          the record has been checkpointed to disk. When the Kubelet is restarted,
          it tries to make the Assigned config the Active config by loading and
          validating the checkpointed payload identified by Assigned.
          +optional
      error:
        description: |-
          Error describes any problems reconciling the Spec.ConfigSource to the Active config.
          Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned
          record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting
          to load or validate the Assigned config, etc.
          Errors may occur at different points while syncing config. Earlier errors (e.g. download or
          checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across
          Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in
          a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error
          by fixing the config assigned in Spec.ConfigSource.
          You can find additional information for debugging by searching the error message in the Kubelet log.
          Error is a human-readable description of the error state; machines can check whether or not Error
          is empty, but should not rely on the stability of the Error text across Kubelet versions.
          +optional
        type: string
      lastKnownGood:
        allOf:
        - $ref: '#/definitions/v1.NodeConfigSource'
        description: |-
          LastKnownGood reports the checkpointed config the node will fall back to
          when it encounters an error attempting to use the Assigned config.
          The Assigned config becomes the LastKnownGood config when the node determines
          that the Assigned config is stable and correct.
          This is currently implemented as a 10-minute soak period starting when the local
          record of Assigned config is updated. If the Assigned config is Active at the end
          of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is
          reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil,
          because the local default config is always assumed good.
          You should not make assumptions about the node's method of determining config stability
          and correctness, as this may change or become configurable in the future.
          +optional
    type: object
  v1.NodeDaemonEndpoints:
    properties:
      kubeletEndpoint:
        allOf:
        - $ref: '#/definitions/v1.DaemonEndpoint'
        description: |-
          Endpoint on which Kubelet is listening.
          +optional
    type: object
  v1.NodePhase:
    enum:
    - Pending
    - Running
    - Terminated
    type: string
    x-enum-varnames:
    - NodePending
    - NodeRunning
    - NodeTerminated
  v1.NodeSpec:
    properties:
      configSource:
        allOf:
        - $ref: '#/definitions/v1.NodeConfigSource'
        description: |-
          Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature. This feature is removed from Kubelets as of 1.24 and will be fully removed in 1.26.
          +optional
      externalID:
        description: |-
          Deprecated. Not all kubelets will set this field. Remove field after 1.13.
          see: https://issues.k8s.io/61966
          +optional
        type: string
      podCIDR:
        description: |-
          PodCIDR represents the pod IP range assigned to the node.
          +optional
        type: string
      podCIDRs:
        description: |-
          podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this
          field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for
          each of IPv4 and IPv6.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      providerID:
        description: |-
          ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>
          +optional
        type: string
      taints:
        description: |-
          If specified, the node's taints.
          +optional
        items:
          $ref: '#/definitions/v1.Taint'
        type: array
      unschedulable:
        description: |-
          Unschedulable controls node schedulability of new pods. By default, node is schedulable.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
          +optional
        type: boolean
    type: object
  v1.NodeStatus:
    properties:
      addresses:
        description: |-
          List of addresses reachable to the node.
          Queried from cloud provider, if available.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses
          Note: This field is declared as mergeable, but the merge key is not sufficiently
          unique, which can cause data corruption when it is merged. Callers should instead
          use a full-replacement patch. See http://pr.k8s.io/79391 for an example.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.NodeAddress'
        type: array
      allocatable:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Allocatable represents the resources of a node that are available for scheduling.
          Defaults to Capacity.
          +optional
      capacity:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Capacity represents the total resources of a node.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
          +optional
      conditions:
        description: |-
          Conditions is an array of current observed node conditions.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.NodeCondition'
        type: array
      config:
        allOf:
        - $ref: '#/definitions/v1.NodeConfigStatus'
        description: |-
          Status of the config assigned to the node via the dynamic Kubelet config feature.
          +optional
      daemonEndpoints:
        allOf:
        - $ref: '#/definitions/v1.NodeDaemonEndpoints'
        description: |-
          Endpoints of daemons running on the Node.
          +optional
      images:
        description: |-
          List of container images on this node
          +optional
        items:
          $ref: '#/definitions/v1.ContainerImage'
        type: array
      nodeInfo:
        allOf:
        - $ref: '#/definitions/v1.NodeSystemInfo'
        description: |-
          Set of ids/uuids to uniquely identify the node.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#info
          +optional
      phase:
        allOf:
        - $ref: '#/definitions/v1.NodePhase'
        description: |-
          NodePhase is the recently observed lifecycle phase of the node.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#phase
          The field is never populated, and now is deprecated.
          +optional
      volumesAttached:
        description: |-
          List of volumes that are attached to the node.
          +optional
        items:
          $ref: '#/definitions/v1.AttachedVolume'
        type: array
      volumesInUse:
        description: |-
          List of attachable volumes in use (mounted) by the node.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.NodeSystemInfo:
    properties:
      architecture:
        description: The Architecture reported by the node
        type: string
      bootID:
        description: Boot ID reported by the node.
        type: string
      containerRuntimeVersion:
        description: ContainerRuntime Version reported by the node through runtime
          remote API (e.g. containerd://1.4.2).
        type: string
      kernelVersion:
        description: Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
        type: string
      kubeProxyVersion:
        description: KubeProxy Version reported by the node.
        type: string
      kubeletVersion:
        description: Kubelet Version reported by the node.
        type: string
      machineID:
        description: |-
          MachineID reported by the node. For unique machine identification
          in the cluster this field is preferred. Learn more from man(5)
          machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
        type: string
      operatingSystem:
        description: The Operating System reported by the node
        type: string
      osImage:
        description: OS Image reported by the node from /etc/os-release (e.g. Debian
          GNU/Linux 7 (wheezy)).
        type: string
      systemUUID:
        description: |-
          SystemUUID reported by the node. For unique machine identification
          MachineID is preferred. This field is specific to Red Hat hosts
          https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
        type: string
    type: object
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      clusterName:
        description: |-
          Deprecated: ClusterName is a legacy field that was always cleared by
          the system and never used; it will be removed completely in 1.25.

          The name in the go struct is changed to help clients detect
          accidental use.

          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.ObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
          for how the garbage collector interacts with this field and enforces the foreground deletion.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.ResourceList:
    additionalProperties:
      $ref: '#/definitions/resource.Quantity'
    type: object
  v1.Taint:
    properties:
      effect:
        allOf:
        - $ref: '#/definitions/v1.TaintEffect'
        description: |-
          Required. The effect of the taint on pods
          that do not tolerate the taint.
          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
      key:
        description: Required. The taint key to be applied to a node.
        type: string
      timeAdded:
        description: |-
          TimeAdded represents the time at which the taint was added.
          It is only written for NoExecute taints.
          +optional
        type: string
      value:
        description: |-
          The taint value corresponding to the taint key.
          +optional
        type: string
    type: object
  v1.TaintEffect:
    enum:
    - NoSchedule
    - PreferNoSchedule
    - NoExecute
    type: string
    x-enum-varnames:
    - TaintEffectNoSchedule
    - TaintEffectPreferNoSchedule
    - TaintEffectNoExecute
  v1alpha1.AccessibilityTopology:
    properties:
      nodes:
        description: Nodes is the collection of storage nodes the volume replicas
          must locate at
        items:
          type: string
        type: array
      regions:
        description: |-
          regions where the volume replicas should be distributed across, it's Optional
          +kubebuilder:default:={default}
        items:
          type: string
        type: array
      zones:
        description: |-
          zones where the volume replicas should be distributed across, it's Optional
          +kubebuilder:default:={default}
        items:
          type: string
        type: array
    type: object
  v1alpha1.AdmissionControllerStatus:
    properties:
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.ApiServerStatus:
    properties:
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.ComponentStatus:
    properties:
      admissionController:
        $ref: '#/definitions/v1alpha1.AdmissionControllerStatus'
      apiServer:
        $ref: '#/definitions/v1alpha1.ApiServerStatus'
      evictor:
        $ref: '#/definitions/v1alpha1.EvictorStatus'
      exporter:
        $ref: '#/definitions/v1alpha1.ExporterStatus'
      localDiskManager:
        $ref: '#/definitions/v1alpha1.LocalDiskManagerStatus'
      localStorage:
        $ref: '#/definitions/v1alpha1.LocalStorageStatus'
      scheduler:
        $ref: '#/definitions/v1alpha1.SchedulerStatus'
    type: object
  v1alpha1.DeployStatus:
    properties:
      availablePodCount:
        type: integer
      desiredPodCount:
        type: integer
      pods:
        items:
          $ref: '#/definitions/v1alpha1.PodStatus'
        type: array
      workloadName:
        type: string
      workloadType:
        type: string
    type: object
  v1alpha1.DiskAttributes:
    properties:
      devType:
        description: |-
          DeviceType represents the type of device like
          sparse, disk, partition, lvm, crypt
        type: string
      formFactor:
        description: FormFactor is the disk size, like 2.5 inches
        type: string
      modelName:
        description: ModelName is the name of disk model
        type: string
      pciVendorID:
        description: PCIVendorID is the ID of the PCI vendor, for NVMe disk only
        type: string
      product:
        description: Product is a class of disks the vendor produces
        type: string
      protocol:
        description: Protocol is for data transport, such as ATA, SCSI, NVMe
        type: string
      rotationRate:
        description: RotationRate is the rate of the disk rotation
        type: integer
      serialNumber:
        description: SerialNumber is a unique number assigned to a disk
        type: string
      type:
        description: Type is the disk type, such as ata, scsi, nvme, megaraid,N, ...
        type: string
      vendor:
        description: Vendor is who provides the disk
        type: string
    type: object
  v1alpha1.DiskClaimDescription:
    properties:
      capacity:
        description: Capacity of the disk in bytes
        type: integer
      devicePaths:
        description: |-
          Match the device path of Localdisk
          DevicePaths match all disks if DevicePaths are empty
        items:
          type: string
        type: array
      diskType:
        description: |-
          DiskType represents the type of drive like SSD, HDD etc.,
          +optional
        type: string
      localDiskNames:
        description: |-
          Match the name of Localdisk
          LocalDiskNames match all disks if LocalDiskNames are empty
        items:
          type: string
        type: array
    type: object
  v1alpha1.EventRecord:
    properties:
      action:
        description: The action is the operation on the resource, such as Migrate
          a LocalVolume
        type: string
      actionContent:
        description: The content of the action which is a JSON string
        type: string
      id:
        description: id is unique
        type: string
      state:
        description: The state of the action
        type: string
      stateContent:
        description: The content of the action state which is a JSON string
        type: string
      time:
        description: The time when does the action happen
        type: string
    type: object
  v1alpha1.EventSpec:
    properties:
      records:
        items:
          $ref: '#/definitions/v1alpha1.EventRecord'
        type: array
      resourceName:
        description: Name of the resource
        type: string
      resourceType:
        description: |-
          HwameiStor resource type: Cluster, LocalStorageNode, LocalDiskNode, Pool,  LocalVolume, LocalDiskVolume, LocalDisk,
          +kubebuilder:validation:Enum:=Cluster;StorageNode;DiskNode;Pool;Volume;DiskVolume;Disk
        type: string
    type: object
  v1alpha1.EventStatus:
    type: object
  v1alpha1.EvictorStatus:
    properties:
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.ExporterStatus:
    properties:
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.FileSystemInfo:
    properties:
      fsType:
        description: |-
          Type represents the FileSystem type of the disk
          +optional
        type: string
      mountPoint:
        description: |-
          MountPoint represents the mountpoint of the disk
          +optional
        type: string
    type: object
  v1alpha1.HAState:
    properties:
      reason:
        description: Reason is why this state happened
        type: string
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: Consistent, Inconsistent, replica is ready only when consistent
    type: object
  v1alpha1.LocalDevice:
    properties:
      capacityBytes:
        description: disk capacity
        type: integer
      devPath:
        description: e.g. /dev/sdb
        type: string
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: 'Possible state: Available, Inuse, Offline'
      type:
        description: 'Supported: HDD, SSD, NVMe, RAM'
        type: string
    type: object
  v1alpha1.LocalDisk:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalDiskSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalDiskStatus'
    type: object
  v1alpha1.LocalDiskClaimSpec:
    properties:
      description:
        allOf:
        - $ref: '#/definitions/v1alpha1.DiskClaimDescription'
        description: |-
          Description of the disk to be claimed
          +optional
      diskRefs:
        description: |-
          DiskRefs represents which disks are assigned to the LocalDiskClaim
          +optional
        items:
          $ref: '#/definitions/v1.ObjectReference'
        type: array
      nodeName:
        description: |-
          +kubebuilder:validation:Required
          NodeName represents where disk has to be claimed.
        type: string
      owner:
        description: |-
          Owner represents which system owns this claim(e.g. local-storage, local-disk-manager)
          +kubebuilder:validation:Required
        type: string
    type: object
  v1alpha1.LocalDiskManagerStatus:
    properties:
      csi:
        $ref: '#/definitions/v1alpha1.DeployStatus'
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.LocalDiskNode:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalDiskNodeSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalDiskNodeStatus'
    type: object
  v1alpha1.LocalDiskNodeSpec:
    properties:
      nodeName:
        description: NodeName represent where disk is attached
        type: string
    type: object
  v1alpha1.LocalDiskNodeStatus:
    properties:
      conditions:
        description: |-
          Represents the latest available observations of a localstoragenode's current state.
          +optional
        items:
          $ref: '#/definitions/v1alpha1.StorageNodeCondition'
        type: array
      freeCapacity:
        description: FreeCapacity indicates the free capacity of all the disks
        type: integer
      freeDisk:
        description: FreeDisk
        type: integer
      poolExtendRecords:
        additionalProperties:
          items:
            $ref: '#/definitions/v1alpha1.LocalDiskClaimSpec'
          type: array
        description: |-
          PoolExtendRecords record why disks are joined in the pool
          +optional
        type: object
      pools:
        additionalProperties:
          $ref: '#/definitions/v1alpha1.LocalPool'
        description: |-
          There may have multiple storage pools in a node.
          e.g. HDD_POOL, SSD_POOL, NVMe_POOL
          Pools: poolName -> LocalPool
        type: object
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: 'State of the Local Storage Node/Member: New, Active, Inactive,
          Failed'
      totalCapacity:
        description: TotalCapacity indicates the capacity of all the disks
        type: integer
      totalDisk:
        description: TotalDisk
        type: integer
    type: object
  v1alpha1.LocalDiskSpec:
    properties:
      capacity:
        description: Capacity of the disk in bytes
        type: integer
      claimRef:
        allOf:
        - $ref: '#/definitions/v1.ObjectReference'
        description: |-
          ClaimRef is the reference to the LDC which has claimed this LD
          +optional
      devLinks:
        description: DevLinks are symbol links for this device
        items:
          type: string
        type: array
      devicePath:
        description: DevicePath is the disk path in the OS
        type: string
      diskAttributes:
        allOf:
        - $ref: '#/definitions/v1alpha1.DiskAttributes'
        description: DiskAttributes has hardware/static attributes of the disk
      isRaid:
        description: HasRAID identifies if the disk is a raid disk or not
        type: boolean
      major:
        description: |-
          Major represents drive used by the device
          +optional
        type: string
      minor:
        description: |-
          Minor is used to distinguish different devices
          +optional
        type: string
      nodeName:
        description: |-
          NodeName represents the node where the disk is attached
          +kubebuilder:validation:Required
        type: string
      owner:
        description: |-
          Owner represents which system owns this claim(e.g. local-storage, local-disk-manager)
          +optional
        type: string
      partitionInfo:
        description: |-
          PartitionInfo contains partition information
          +optional
        items:
          $ref: '#/definitions/v1alpha1.PartitionInfo'
        type: array
      partitioned:
        description: HasPartition represents if the disk has partitions or not
        type: boolean
      preDevicePath:
        description: PreDevicePath represents the last device path in the OS
        type: string
      preNodeName:
        description: PreNodeName represents the node where the disk was attached
        type: string
      raidInfo:
        allOf:
        - $ref: '#/definitions/v1alpha1.RAIDInfo'
        description: |-
          RAIDInfo contains RAID information
          +optional
      reserved:
        description: |-
          Reserved represents the disk won't be used in hwameistor later, until it becomes unreserved
          +optional
        type: boolean
      smartInfo:
        allOf:
        - $ref: '#/definitions/v1alpha1.SmartInfo'
        description: |-
          SmartInfo contains infos collected by smartctl
          +optional
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.LocalDiskState'
        description: |-
          State is the current state of the disk (Active/Inactive/Unknown)
          +kubebuilder:validation:Enum:=Active;Inactive;Unknown
      supportSmart:
        description: HasSmartInfo identified if the disk supports SMART or not
        type: boolean
      uuid:
        description: UUID global unique identifier of the disk
        type: string
    type: object
  v1alpha1.LocalDiskState:
    enum:
    - Active
    - Inactive
    - Unknown
    - ""
    - Pending
    - Available
    - Bound
    type: string
    x-enum-varnames:
    - LocalDiskActive
    - LocalDiskInactive
    - LocalDiskUnknown
    - LocalDiskEmpty
    - LocalDiskPending
    - LocalDiskAvailable
    - LocalDiskBound
  v1alpha1.LocalDiskStatus:
    properties:
      claimState:
        allOf:
        - $ref: '#/definitions/v1alpha1.LocalDiskState'
        description: |-
          State represents the claim state of the disk
          +kubebuilder:validation:Enum:=Bound;Reserved;Available;Pending
    type: object
  v1alpha1.LocalPool:
    properties:
      class:
        description: |-
          Supported class: HDD, SSD, NVMe
          +kubebuilder:validation:Enum:=HDD;SSD;NVMe
        type: string
      disks:
        items:
          $ref: '#/definitions/v1alpha1.LocalDevice'
        type: array
      freeCapacityBytes:
        type: integer
      freeVolumeCount:
        type: integer
      name:
        description: 'Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL'
        type: string
      path:
        description: VG path
        type: string
      totalCapacityBytes:
        type: integer
      totalVolumeCount:
        type: integer
      type:
        description: |-
          Supported type: REGULAR
          +kubebuilder:validation:Enum:=REGULAR
          +kubebuilder:default:=REGULAR
        type: string
      usedCapacityBytes:
        type: integer
      usedVolumeCount:
        type: integer
      volumeCapacityBytesLimit:
        type: integer
      volumes:
        items:
          type: string
        type: array
    type: object
  v1alpha1.LocalStorageNode:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalStorageNodeSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalStorageNodeStatus'
    type: object
  v1alpha1.LocalStorageNodeSpec:
    properties:
      hostname:
        type: string
      storageIP:
        description: IPv4 address is for HA replication traffic
        type: string
      topogoly:
        $ref: '#/definitions/v1alpha1.Topology'
    type: object
  v1alpha1.LocalStorageNodeStatus:
    properties:
      conditions:
        description: |-
          Represents the latest available observations of a localstoragenode's current state.
          +optional
        items:
          $ref: '#/definitions/v1alpha1.StorageNodeCondition'
        type: array
      poolExtendRecords:
        additionalProperties:
          items:
            $ref: '#/definitions/v1alpha1.LocalDiskClaimSpec'
          type: array
        description: |-
          PoolExtendRecords record why disks are joined in the pool
          +optional
        type: object
      pools:
        additionalProperties:
          $ref: '#/definitions/v1alpha1.LocalPool'
        description: |-
          There may have multiple storage pools in a node.
          e.g. HDD_POOL, SSD_POOL, NVMe_POOL
          Pools: poolName -> LocalPool
        type: object
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: 'State of the Local Storage Node/Member: New, Active, Inactive,
          Failed'
    type: object
  v1alpha1.LocalStorageStatus:
    properties:
      csi:
        $ref: '#/definitions/v1alpha1.DeployStatus'
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.LocalVolume:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.LocalVolumeSpec'
      status:
        $ref: '#/definitions/v1alpha1.LocalVolumeStatus'
    type: object
  v1alpha1.LocalVolumeConvertSpec:
    properties:
      abort:
        description: +kubebuilder:default:=false
        type: boolean
      replicaNumber:
        description: |-
          ReplicaNumber is the number of replicas which the volume will be converted to
          currently, only support the case of converting a non-HA volume to HA
          +kubebuilder:validation:Minimum:=2
          +kubebuilder:validation:Maximum:=2
        type: integer
      volumeName:
        type: string
    type: object
  v1alpha1.LocalVolumeConvertStatus:
    properties:
      message:
        type: string
      state:
        $ref: '#/definitions/v1alpha1.State'
    type: object
  v1alpha1.LocalVolumeExpandSpec:
    properties:
      abort:
        description: +kubebuilder:default:=false
        type: boolean
      requiredCapacityBytes:
        description: +kubebuilder:validation:Minimum:=4194304
        type: integer
      volumeName:
        type: string
    type: object
  v1alpha1.LocalVolumeExpandStatus:
    properties:
      allocatedCapacityBytes:
        type: integer
      message:
        type: string
      state:
        $ref: '#/definitions/v1alpha1.State'
      subs:
        description: sub resources at different node.
        items:
          type: string
        type: array
    type: object
  v1alpha1.LocalVolumeGroupSpec:
    properties:
      accessibility:
        allOf:
        - $ref: '#/definitions/v1alpha1.AccessibilityTopology'
        description: Accessibility is the topology requirement of the volume. It describes
          how to locate and distribute the volume replicas
      namespace:
        type: string
      pods:
        items:
          type: string
        type: array
      volumes:
        description: Volumes is the collection of the volumes in the group
        items:
          $ref: '#/definitions/v1alpha1.VolumeInfo'
        type: array
    type: object
  v1alpha1.LocalVolumeGroupStatus:
    type: object
  v1alpha1.LocalVolumeMigrateSpec:
    properties:
      abort:
        description: +kubebuilder:default:=false
        type: boolean
      migrateAllVols:
        description: +kubebuilder:default:=true
        type: boolean
      sourceNode:
        description: source NodeNames
        type: string
      targetNodesSuggested:
        description: suggested target NodeNames
        items:
          type: string
        type: array
      volumeName:
        type: string
    type: object
  v1alpha1.LocalVolumeMigrateStatus:
    properties:
      message:
        description: error message to describe some states
        type: string
      originalReplicaNumber:
        description: record the volume's replica number, it will be set internally
        type: integer
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: State of the operation, e.g. submitted, started, completed, abort,
          ...
      targetNode:
        description: record the node where the specified replica is migrated to
        type: string
      volumes:
        description: record all the volumes to be migrated
        items:
          type: string
        type: array
    type: object
  v1alpha1.LocalVolumeReplicaSpec:
    properties:
      delete:
        description: |-
          Delete is to indicate where the replica should be deleted or not.
          It's different from the regular resource delete interface in Kubernetes.
          The purpose is to protect it from any mistakes
          +kubebuilder:default:=false
        type: boolean
      nodeName:
        description: NodeName is the assigned node where the volume replica is located
        type: string
      poolName:
        description: PoolName is the name of the storage pool, e.g. LocalStorage_PoolHDD,
          LocalStorage_PoolSSD, etc..
        type: string
      requiredCapacityBytes:
        description: +kubebuilder:validation:Minimum:=4194304
        type: integer
      volumeName:
        description: VolumeName is the name of the volume, e.g. pvc-fbf3ffc3-66db-4dae-9032-bda3c61b8f85
        type: string
      volumeQoS:
        allOf:
        - $ref: '#/definitions/v1alpha1.VolumeQoS'
        description: VolumeQoS is the QoS of the volume
    type: object
  v1alpha1.LocalVolumeReplicaStatus:
    properties:
      allocatedCapacityBytes:
        description: AllocatedCapacityBytes is the real allocated capacity in bytes
        type: integer
      devPath:
        description: |-
          DevicePath is a link path of the StoragePath of the volume replica,
          e.g. /dev/LocalStorage_PoolHDD/pvc-fbf3ffc3-66db-4dae-9032-bda3c61b8f85
        type: string
      disks:
        description: Disks is a list of physical disks where the volume replica is
          spread cross, especially for striped LVM volume replica
        items:
          type: string
        type: array
      haState:
        allOf:
        - $ref: '#/definitions/v1alpha1.HAState'
        description: HAState is state for ha replica, replica.Status.State == Ready
          only when HAState is Consistent of nil
      inuse:
        description: |-
          InUse is one of volume replica's states, which indicates the replica is used by a Pod or not
          +kubebuilder:default:=false
        type: boolean
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: State is the phase of volume replica, e.g. Creating, Ready, NotReady,
          ToBeDeleted, Deleted
      storagePath:
        description: StoragePath is a real path of the volume replica, like /dev/sdg.
        type: string
      synced:
        description: |-
          Synced is the sync state of the volume replica, which is important in HA volume
          +kubebuilder:default:=false
        type: boolean
    type: object
  v1alpha1.LocalVolumeSnapshotSpec:
    properties:
      accessibility:
        allOf:
        - $ref: '#/definitions/v1alpha1.AccessibilityTopology'
        description: |-
          NOTE: We only take snapshots on the volume replica exist at the moment!
          Accessibility is the topology requirement of the volume snapshot. It describes how to locate and distribute the volume replicas snapshot.
      delete:
        description: +kubebuilder:default:=false
        type: boolean
      requiredCapacityBytes:
        description: |-
          RequiredCapacityBytes specifies the space reserved for the snapshot
          +kubebuilder:validation:Required
          +kubebuilder:validation:Minimum:=4194304
        type: integer
      sourceVolume:
        description: |-
          SourceVolume specifies the source volume of the snapshot
          +kubebuilder:validation:Required
        type: string
    type: object
  v1alpha1.LocalVolumeSnapshotStatus:
    properties:
      allocatedCapacityBytes:
        description: |-
          AllocatedCapacityBytes is the real allocated capacity in bytes
          In case of HA volume with multiple replicas, the value is equal to the one of a replica's snapshot size
        type: integer
      attr:
        allOf:
        - $ref: '#/definitions/v1alpha1.VolumeSnapshotAttr'
        description: Attribute indicates attr on snapshot
      creationTime:
        description: |-
          CreationTime is the host real snapshot creation time
          In case of HA volume with multiple replicas, the value is equal to the one of a replica's snapshot creation time
        type: string
      message:
        description: Message error message to describe some states
        type: string
      replicaSnapshots:
        description: ReplicaSnapshots represents the actual snapshots of replica
        items:
          type: string
        type: array
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: State is the phase of volume replica, e.g. Creating, Ready, NotReady,
          ToBeDeleted, Deleted
    type: object
  v1alpha1.LocalVolumeSpec:
    properties:
      accessibility:
        allOf:
        - $ref: '#/definitions/v1alpha1.AccessibilityTopology'
        description: Accessibility is the topology requirement of the volume. It describes
          how to locate and distribute the volume replicas
      config:
        allOf:
        - $ref: '#/definitions/v1alpha1.VolumeConfig'
        description: |-
          Config is the configration for the volume replicas
          It will be managed by the controller, and watched by all the nodes
          Important: node will manage volume replica according this config
      convertible:
        description: |-
          Convertible is to indicate if the non-HA volume can be transitted to HA volume or not
          +kubebuilder:default:=false
        type: boolean
      delete:
        description: |-
          Delete is to indicate where the replica should be deleted or not.
          It's different from the regular resource delete interface in Kubernetes.
          The purpose is to protect it from any mistakes
          +kubebuilder:default:=false
        type: boolean
      poolName:
        description: PoolName is the name of the storage pool, e.g. LocalStorage_PoolHDD,
          LocalStorage_PoolSSD, etc..
        type: string
      pvcName:
        description: PersistentVolumeClaimName is the name of the associated PVC
        type: string
      pvcNamespace:
        description: PersistentVolumeClaimNamespace is the namespace of the associated
          PVC
        type: string
      replicaNumber:
        description: |-
          replica number: 1 - non-HA, 2 - HA, 4 - migration (temp)
          +kubebuilder:validation:Minimum:=1
          +kubebuilder:validation:Maximum:=4
        type: integer
      requiredCapacityBytes:
        description: +kubebuilder:validation:Minimum:=4194304
        type: integer
      volumeQoS:
        allOf:
        - $ref: '#/definitions/v1alpha1.VolumeQoS'
        description: VolumeQoS is the QoS of the volume
      volumegroup:
        description: VolumeGroup is the group name of the local volumes. It is designed
          for the scheduling and allocating.
        type: string
    type: object
  v1alpha1.LocalVolumeStatus:
    properties:
      allocatedCapacityBytes:
        description: |-
          AllocatedCapacityBytes is the real allocated capacity in bytes of the volume replicas.
          In case of HA volume with multiple replicas, the value is equal to the one of a replica's size
        type: integer
      fsType:
        description: PublishedFSType is the fstype on this volume
        type: string
      publishedNode:
        description: PublishedNodeName is the node where the volume is published and
          used by pod
        type: string
      rawblock:
        description: |-
          PublishedRawBlock is for raw block
          +kubebuilder:default:=false
        type: boolean
      replicas:
        description: Volume is a logical concept and composed by one or many replicas
          which will be located at different node.
        items:
          type: string
        type: array
      state:
        allOf:
        - $ref: '#/definitions/v1alpha1.State'
        description: State is the phase of volume replica, e.g. Creating, Ready, NotReady,
          ToBeDeleted, Deleted
      totalInode:
        description: TotalINodes is the total inodes of the volume's filesystem
        type: integer
      usedCapacityBytes:
        description: UsedCapacityBytes is the used capacity in bytes of the volume,
          which is available only for filesystem
        type: integer
      usedInode:
        description: UsedInode is the used inodes of the volume's filesystem
        type: integer
    type: object
  v1alpha1.PartitionInfo:
    properties:
      filesystem:
        allOf:
        - $ref: '#/definitions/v1alpha1.FileSystemInfo'
        description: |-
          FileSystem contains mount point and filesystem type
          +optional
      hasFileSystem:
        description: HasFileSystem represents whether the filesystem is included
        type: boolean
      path:
        description: Path represents the partition path in the OS
        type: string
    type: object
  v1alpha1.PodStatus:
    properties:
      name:
        type: string
      node:
        type: string
      status:
        type: string
    type: object
  v1alpha1.RAIDInfo:
    properties:
      raidMaster:
        description: RAIDMaster is the master of the RAID disk, it works for only
          RAID slave disk, e.g. /dev/bus/0
        type: string
    type: object
  v1alpha1.SchedulerStatus:
    properties:
      health:
        type: string
      instances:
        $ref: '#/definitions/v1alpha1.DeployStatus'
    type: object
  v1alpha1.SmartAssessResult:
    enum:
    - Passed
    - Failed
    type: string
    x-enum-varnames:
    - AssessPassed
    - AssessFailed
  v1alpha1.SmartInfo:
    properties:
      overallHealth:
        allOf:
        - $ref: '#/definitions/v1alpha1.SmartAssessResult'
        description: OverallHealth identifies if the disk is healthy or not
    type: object
  v1alpha1.State:
    enum:
    - ""
    - ToBeMounted
    - ToBeUnMount
    - Mounted
    - NotReady
    - Ready
    - Maintain
    - Offline
    - ToBeMounted
    - ""
    - Created
    - Creating
    - Ready
    - NotReady
    - ToBeDeleted
    - Deleted
    - Invalid
    - Creating
    - Ready
    - NotReady
    - ToBeDeleted
    - Deleted
    - Consistent
    - Inconsistent
    - Up
    - Down
    - Submitted
    - AddReplica
    - SyncReplica
    - PruneReplica
    - InProgress
    - Completed
    - ToBeAborted
    - Cancelled
    - Aborted
    - Failed
    - Available
    - InUse
    - Offline
    type: string
    x-enum-varnames:
    - MountPointStateEmpty
    - MountPointToBeMounted
    - MountPointToBeUnMount
    - MountPointMounted
    - MountPointNotReady
    - NodeStateReady
    - NodeStateMaintain
    - NodeStateOffline
    - VolumeStateToBeUnmount
    - VolumeStateEmpty
    - VolumeStateCreated
    - VolumeStateCreating
    - VolumeStateReady
    - VolumeStateNotReady
    - VolumeStateToBeDeleted
    - VolumeStateDeleted
    - VolumeReplicaStateInvalid
    - VolumeReplicaStateCreating
    - VolumeReplicaStateReady
    - VolumeReplicaStateNotReady
    - VolumeReplicaStateToBeDeleted
    - VolumeReplicaStateDeleted
    - HAVolumeReplicaStateConsistent
    - HAVolumeReplicaStateInconsistent
    - HAVolumeReplicaStateUp
    - HAVolumeReplicaStateDown
    - OperationStateSubmitted
    - OperationStateMigrateAddReplica
    - OperationStateMigrateSyncReplica
    - OperationStateMigratePruneReplica
    - OperationStateInProgress
    - OperationStateCompleted
    - OperationStateToBeAborted
    - OperationStateAborting
    - OperationStateAborted
    - OperationStateFailed
    - DiskStateAvailable
    - DiskStateInUse
    - DiskStateOffline
  v1alpha1.StorageNodeCondition:
    properties:
      lastTransitionTime:
        description: Last time the condition transitioned from one status to another.
        type: string
      lastUpdateTime:
        description: The last time this condition was updated.
        type: string
      message:
        description: A human-readable message indicating details about the transition.
        type: string
      reason:
        description: The reason for the condition's last transition.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_hwameistor_hwameistor_pkg_apis_hwameistor_v1alpha1.ConditionStatus'
        description: Status of the condition, one of True, False, Unknown.
      type:
        allOf:
        - $ref: '#/definitions/v1alpha1.StorageNodeConditionType'
        description: Type of localstoragenode condition.
    type: object
  v1alpha1.StorageNodeConditionType:
    enum:
    - Available
    - UnAvailable
    - Progressing
    - ExpandFailure
    - ExpandSuccess
    type: string
    x-enum-varnames:
    - StorageAvailable
    - StorageUnAvailable
    - StorageProgressing
    - StorageExpandFailure
    - StorageExpandSuccess
  v1alpha1.Topology:
    properties:
      region:
        description: |-
          Region is a collection of Zones
          +kubebuilder:default:=default
        type: string
      zone:
        description: |-
          Zone is a collection of Local Storage Nodes
          +kubebuilder:default:=default
        type: string
    type: object
  v1alpha1.VolumeConfig:
    properties:
      convertible:
        description: Convertible is to indicate if the non-HA volume can be transitted
          to HA volume or not
        type: boolean
      initialized:
        type: boolean
      readyToInitialize:
        type: boolean
      replicas:
        items:
          $ref: '#/definitions/v1alpha1.VolumeReplica'
        type: array
      requiredCapacityBytes:
        type: integer
      resourceID:
        description: ResourceID is for HA volume, set to '-1' for non-HA volume
        type: integer
      version:
        description: Version of config, start from 0, plus 1 every time config update
        type: integer
      volumeName:
        type: string
    type: object
  v1alpha1.VolumeInfo:
    properties:
      localvolume:
        description: LocalVolumeName is the name of the LocalVolume
        type: string
      pvc:
        description: PersistentVolumeClaimName is the name of the associated PVC
        type: string
    type: object
  v1alpha1.VolumeQoS:
    properties:
      iops:
        description: IOPS defines the IOPS of the volume
        type: string
      throughput:
        description: Throughput defines the throughput of the volume
        type: string
    type: object
  v1alpha1.VolumeReplica:
    properties:
      hostname:
        type: string
      id:
        type: integer
      ip:
        type: string
      primary:
        type: boolean
    type: object
  v1alpha1.VolumeSnapshotAttr:
    properties:
      invalid:
        description: Invalid set true if snapshot is expiration
        type: boolean
      merging:
        description: Merging set true if snapshot is merging now
        type: boolean
    type: object
info:
  contact: {}
paths:
  /cluster/auth/auth:
    post:
      consumes:
      - application/json
      description: Authorize user, return a token and expireAt if success
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AuthReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AuthRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: Authorization
      tags:
      - Auth
  /cluster/auth/info:
    get:
      description: Get the status if enable authorization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AuthInfoRspBody'
      summary: Auth info
      tags:
      - Auth
  /cluster/auth/logout:
    post:
      description: Logout the token, if verify token success, delete this token and
        return success
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AuthLogoutRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: Logout the token
      tags:
      - Auth
  /cluster/drbd:
    get:
      consumes:
      - application/json
      description: get DRBDSettingGet
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DrbdEnableSetting'
      summary: 摘要 获取高可用设置
      tags:
      - Setting
    post:
      consumes:
      - application/json
      description: post EnableDRBDSetting
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.DrbdEnableSettingReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DrbdEnableSettingRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 高可用设置
      tags:
      - Setting
  /cluster/events:
    get:
      consumes:
      - application/json
      description: EventList 排序  resourceType枚举（Cluster;StorageNode;DiskNode;Pool;Volume;DiskVolume;Disk）  sort枚举
        （time、name、type）
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: resourceName
        in: query
        name: resourceName
        type: string
      - description: resourceType
        in: query
        name: resourceType
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.EventActionList'
      summary: 摘要 获取审计日志
      tags:
      - Metric
  /cluster/events/:eventName:
    get:
      consumes:
      - application/json
      description: EventGet
      parameters:
      - description: eventName
        in: path
        name: eventName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Event'
      summary: 摘要 获取指定事件
      tags:
      - Metric
  /cluster/localdisknodes:
    get:
      consumes:
      - application/json
      description: get LocalDiskNodeList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDiskNodeList'
      summary: 摘要 获取集群磁盘组列表
      tags:
      - LocalDiskNode
  /cluster/localdisks:
    get:
      consumes:
      - application/json
      description: get LocalDiskList 状态枚举 (Active、Inactive、Unknown、Pending、Available、Bound)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDiskList'
      summary: 摘要 获取本地磁盘列表
      tags:
      - LocalDisk
  /cluster/nodes:
    get:
      consumes:
      - application/json
      description: list StorageNode  驱动状态 [运行中（Ready）,维护中（Maintain）, 离线（Offline)]
        , 节点状态 [运行中（Ready）,未就绪（NotReady）,未知（Unknown)]
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: nodeState
        in: query
        name: nodeState
        type: string
      - description: driverState
        in: query
        name: driverState
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StorageNodeList'
      summary: 摘要 获取存储节点列表
      tags:
      - Node
  /cluster/nodes/{nodeName}:
    get:
      consumes:
      - application/json
      description: get StorageNode 驱动状态 [运行中（Ready）,维护中（Maintain）, 离线（Offline)] ,
        节点状态 [运行中（Ready）,未就绪（NotReady）,未知（Unknown)]
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StorageNode'
      summary: 摘要 获取指定存储节点
      tags:
      - Node
    post:
      consumes:
      - application/json
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.NodeUpdateReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NodeUpdateRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: Set node enable/disable
      tags:
      - Node
  /cluster/nodes/{nodeName}/disks:
    get:
      consumes:
      - application/json
      description: list StorageNodeDisks 状态枚举 （Active、Inactive、Unknown、Pending、Available、Bound)
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: state
        in: query
        name: state
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDiskListByNode'
      summary: 摘要 获取指定存储节点磁盘列表
      tags:
      - Node
  /cluster/nodes/{nodeName}/disks/{devicePath}:
    post:
      consumes:
      - application/json
      description: post UpdateStorageNodeDisk devicePath i.g /dev/sdb /dev/sdc ...
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: devicePath
        in: path
        name: devicePath
        required: true
        type: string
      - description: reqBody
        in: body
        name: body
        schema:
          $ref: '#/definitions/api.DiskReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DiskReqBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 更新磁盘
      tags:
      - Node
  /cluster/nodes/{nodeName}/disks/{devicePath}/owner:
    post:
      consumes:
      - application/json
      description: post SetStorageNodeDiskOwner devicePath i.g /dev/sdb /dev/sdc ...
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: devicePath
        in: path
        name: devicePath
        required: true
        type: string
      - description: reqBody
        in: body
        name: body
        schema:
          $ref: '#/definitions/api.DiskReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DiskReqBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 更新磁盘owner
      tags:
      - Node
  /cluster/nodes/{nodeName}/disks/{diskName}:
    get:
      consumes:
      - application/json
      description: get GetStorageNodeDisk diskname i.g sdb sdc ...
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: diskName
        in: path
        name: diskName
        required: true
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDiskInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定磁盘信息
      tags:
      - Node
  /cluster/nodes/{nodeName}/migrates:
    get:
      consumes:
      - application/json
      description: get StorageNodeMigrate
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: migrateOperationName
        in: query
        name: migrateOperationName
        type: string
      - description: volumeName
        in: query
        name: volumeName
        type: string
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeOperationListByNode'
      summary: 摘要 获取指定节点数据卷迁移任务列表
      tags:
      - Node
  /cluster/nodes/{nodeName}/pools:
    get:
      consumes:
      - application/json
      description: get StorageNodePoolsList
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StoragePoolList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定节点存储池列表信息
      tags:
      - Node
  /cluster/nodes/{nodeName}/pools/{poolName}:
    get:
      consumes:
      - application/json
      description: get StorageNodePoolGet
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StoragePool'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定节点指定存储池信息
      tags:
      - Node
  /cluster/nodes/{nodeName}/pools/{poolName}/disks:
    get:
      consumes:
      - application/json
      description: get StorageNodePoolDisksList
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDisksItemsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定节点指定存储池磁盘列表信息
      tags:
      - Node
  /cluster/nodes/{nodeName}/pools/{poolName}/disks/{diskName}:
    get:
      consumes:
      - application/json
      description: get StorageNodePoolDiskGet
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      - description: diskName
        in: path
        name: diskName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LocalDiskInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定节点指定存储池指定磁盘信息
      tags:
      - Node
  /cluster/operations:
    get:
      consumes:
      - application/json
      description: OperationList 状态枚举 （Submitted、AddReplica、SyncReplica、PruneReplica、InProgress、Completed、ToBeAborted、Cancelled、Aborted、Failed）
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OperationMetric'
      summary: 摘要 获取操作记录列表
      tags:
      - Metric
  /cluster/operations/:operationName:
    get:
      consumes:
      - application/json
      description: OperationGet eventType枚举 (Migrate、Expand、Convert)
      parameters:
      - description: operationName
        in: path
        name: operationName
        required: true
        type: string
      - description: eventType
        in: query
        name: eventType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Operation'
      summary: 摘要 获取指定操作记录
      tags:
      - Metric
  /cluster/pools:
    get:
      consumes:
      - application/json
      description: list StoragePools
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StoragePoolList'
      summary: 摘要 获取存储池列表信息
      tags:
      - Pool
  /cluster/pools/{poolName}:
    get:
      consumes:
      - application/json
      description: get Pool angel
      parameters:
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StoragePool'
      summary: 摘要 获取指定存储池基本信息
      tags:
      - Pool
  /cluster/pools/{poolName}/nodes:
    get:
      consumes:
      - application/json
      description: get StorageNodesGetByPoolName
      parameters:
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: nodeName
        in: query
        name: nodeName
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StorageNodeListByPool'
      summary: 摘要 获取指定存储池存储节点列表信息
      tags:
      - Pool
  /cluster/pools/{poolName}/nodes/{nodeName}/disks:
    get:
      consumes:
      - application/json
      description: get StorageNodeDisksGetByPoolName
      parameters:
      - description: nodeName
        in: path
        name: nodeName
        required: true
        type: string
      - description: poolName
        in: path
        name: poolName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NodeDiskListByPool'
      summary: 摘要 获取指定存储池指定存储节点磁盘列表信息
      tags:
      - Pool
  /cluster/pools/expand:
    post:
      consumes:
      - application/json
      description: expand new disk for storage pool
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StoragePoolExpansionReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StoragePoolExpansionRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: Storage pool expand
      tags:
      - Pool
  /cluster/snapshots:
    get:
      consumes:
      - application/json
      description: list Snapshot
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: snapshotName
        in: query
        name: snapshotName
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: volumeName
        in: query
        name: volumeName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SnapshotList'
      summary: 摘要 全局快照列表展式
      tags:
      - Snapshot
  /cluster/status:
    get:
      consumes:
      - application/json
      description: get ModuleStatus
      parameters:
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ModuleStatus'
      summary: 摘要 获取基础监控指标
      tags:
      - Metric
  /cluster/volumegroups:
    get:
      consumes:
      - application/json
      description: get VolumeGroupList
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeGroupList'
      summary: 摘要 获取数据卷组列表
      tags:
      - VolumeGroup
  /cluster/volumegroups/{vgName}:
    get:
      consumes:
      - application/json
      description: get VolumeGroupGet
      parameters:
      - description: vgName
        in: path
        name: vgName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeGroup'
      summary: 摘要 查看数据卷组
      tags:
      - VolumeGroup
  /cluster/volumes:
    get:
      consumes:
      - application/json
      description: list Volume
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: volumeName
        in: query
        name: volumeName
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: fuzzy
        in: query
        name: fuzzy
        type: boolean
      - description: sort
        in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeList'
      summary: 摘要 获取数据卷列表信息 数据卷状态枚举 （ToBeMounted、Created、Creating、Ready、NotReady、ToBeDeleted、Deleted）
      tags:
      - Volume
  /cluster/volumes/{volumeName}:
    get:
      consumes:
      - application/json
      description: get Volume angel1
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Volume'
      summary: 摘要 获取指定数据卷基本信息
      tags:
      - Volume
  /cluster/volumes/{volumeName}/convert:
    get:
      consumes:
      - application/json
      description: get GetVolumeConvertOperation 状态枚举 （Submitted、InProgress、Completed、ToBeAborted、Aborted）
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeConvertOperation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定数据卷转换操作
      tags:
      - Volume
    post:
      consumes:
      - application/json
      description: post VolumeConvertOperation
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: reqBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VolumeConvertReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeConvertRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 指定数据卷转换操作
      tags:
      - Volume
  /cluster/volumes/{volumeName}/events:
    get:
      consumes:
      - application/json
      description: get VolumeOperation
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: action
        in: query
        name: action
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.EventActionList'
      summary: 摘要 获取指定数据卷审计日志  sort=time ,先不做按操作查询
      tags:
      - Volume
  /cluster/volumes/{volumeName}/expand:
    get:
      consumes:
      - application/json
      description: get GetVolumeExpandOperation 状态枚举 （Submitted、InProgress、Completed、ToBeAborted、Aborted）
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeExpandOperation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定数据卷扩容操作
      tags:
      - Volume
    post:
      consumes:
      - application/json
      description: post VolumeExpandOperation
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: reqBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VolumeExpandReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeExpandRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 指定数据卷扩容操作
      tags:
      - Volume
  /cluster/volumes/{volumeName}/migrate:
    get:
      consumes:
      - application/json
      description: get GetVolumeMigrateOperation 状态枚举 （Submitted、AddReplica、SyncReplica、PruneReplica、InProgress、Completed、ToBeAborted、Cancelled、Aborted、Failed）
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeMigrateOperation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定数据卷迁移操作
      tags:
      - Volume
    post:
      consumes:
      - application/json
      description: post VolumeMigrateOperation body i.g. body { SrcNode string ,SelectedNode
        string}
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: reqBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VolumeMigrateReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeMigrateRspBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 指定数据卷迁移操作
      tags:
      - Volume
  /cluster/volumes/{volumeName}/operations:
    get:
      consumes:
      - application/json
      description: get VolumeOperation
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: volumeEventName
        in: query
        name: volumeEventName
        type: string
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeOperationByVolume'
      summary: 摘要 获取指定数据卷操作记录信息 状态枚举 (Submitted、AddReplica、SyncReplica、PruneReplica、InProgress、Completed、ToBeAborted、Cancelled、Aborted、Failed)
      tags:
      - Volume
  /cluster/volumes/{volumeName}/replicas:
    get:
      consumes:
      - application/json
      description: list volumes
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: volumeReplicaName
        in: query
        name: volumeReplicaName
        type: string
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VolumeReplicaList'
      summary: 摘要 获取指定数据卷的副本列表信息
      tags:
      - Volume
  /cluster/volumes/{volumeName}/snapshot:
    get:
      consumes:
      - application/json
      description: get VolumeSnapshotList
      parameters:
      - description: volumeName
        in: path
        name: volumeName
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: state
        in: query
        name: state
        type: string
      - description: snapshotName
        in: query
        name: snapshotName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SnapshotList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.RspFailBody'
      summary: 摘要 获取指定数据卷快照操作 快照状态枚举 (Creating, Ready, NotReady, ToBeDeleted, Deleted）
      tags:
      - Volume
swagger: "2.0"
